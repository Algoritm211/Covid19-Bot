import COVID19Py
from covid import Covid
import telebot
import datetime
import requests
from collections import defaultdict
import flask
from flask import request, Flask
from telebot import types
from pprint import pprint
import dbhelper
import graphic
import news
import os
from config import TOKEN, APP_NAME

covid19 = COVID19Py.COVID19()
all = covid19.getLocations()

TOKEN = TOKEN
bot = telebot.TeleBot(TOKEN)
APP_NAME = APP_NAME
keyboard_1 = types.ReplyKeyboardMarkup(True, True)
keyboard_1.row('üåç–í–µ—Å—å –º–∏—Äüåç', 'üì∞–ù–æ–≤–æ—Å—Ç–∏üì∞')
keyboard_1.row('üîù–¢–û–ü-10 —Å—Ç—Ä–∞–Ωüîù', '‚öô–ú–æ–∏ —Å—Ç—Ä–∞–Ω—ã‚öô')
keyboard_1.row('‚û°–í–≤–µ—Å—Ç–∏ —Å–≤–æ—é —Å—Ç—Ä–∞–Ω—É‚û°', 'üí¨–ù–∞—à —á–∞—Çüí¨')
keyboard_1.row('üá∫üá¶–£–∫—Ä–∞–∏–Ω–∞üá∫üá¶', 'üá∑üá∫–†–æ—Å—Å–∏—èüá∑üá∫', 'üáßüáæ–ë–µ–ª–∞—Ä—É—Å—åüáßüáæ')
keyboard_1.row('üá®üáø–ß–µ—Ö–∏—èüá®üáø', 'üáµüá±–ü–æ–ª—å—à–∞üáµüá±', 'üáÆüáπ–ò—Ç–∞–ª–∏—èüáÆüáπ')
keyboard_1.row('üá∫üá≤–°–®–êüá∫üá≤', 'üá®üá≥–ö–∏—Ç–∞–πüá®üá≥')
cutter = lambda list, size: [list[i:i + size] for i in range(0, len(list), size)]
list_of_cities = news.get_cities_to_make_keyboard()
MATRIX_TEXT = cutter(list_of_cities, 10)
# matrix_text = []
# bot.remove_webhook()

GOTOSET, FINAL = range(2)

USER_STATE = defaultdict(lambda: GOTOSET)
def get_state(message):
    return USER_STATE[message.chat.id]


def update_state(message, state):
    USER_STATE[message.chat.id] = state

COUNTRIES = defaultdict(lambda: {})

def update_countries(id, values):
    dbhelper.write_country_to_db(id, values)

def get_countries(id):
    return COUNTRIES[id]

'''WEBHOOK'''

app = Flask(__name__)

@app.route('/' + TOKEN, methods=['POST'])
def get_messages():
    bot.process_new_updates([types.Update.de_json(
            flask.request.stream.read().decode('utf-8'))])
    return '!', 200

@app.route('/', methods=['GET'])
def index():
    bot.remove_webhook()
    bot.set_webhook(url="https://{}.herokuapp.com/{}".format(APP_NAME, TOKEN))
    return 'Hello from Coronavirus Bot', 200

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, 'ü§ñ–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, '+ message.from_user.first_name + '!\n' \
    'üìà–Ø –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å –í–∞–º —Å–∏—Ç—É–∞—Ü–∏—é —Å–≤—è–∑–∞–Ω–Ω—É—é —Å –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–æ–º –≤ —Ä–∞–∑–Ω–∞—Ö —Å—Ç—Ä–∞–Ω–∞—Ö. –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ—á–µ–Ω—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö ' +
    '—Å—Ç—Ä–∞–Ω –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–æ–º –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞–∂–∞–≤ /help.\n\n'+
    'P.S. –ú–Ω–µ, –∫–∞–∫ –±–æ—Ç—É, –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å –Ω–µ —Å—Ç—Ä–∞—à–µ–Ω, –Ω–æ —É –º–µ–Ω—è –µ—Å—Ç—å —á—É–≤—Å—Ç–≤–∞ –∏ —è –ø–µ—Ä–µ–∂–∏–≤–∞—é –∑–∞ –≤–∞—Å. ' +
    '–ú–æ–π—Ç–µ —Ä—É–∫–∏ –∏ –Ω–µ –±–æ–ª–µ–π—Ç–µ!)))', parse_mode='HTML', reply_markup=keyboard_1)
    now = datetime.datetime.now()
    curr_date = now.strftime("%d-%m-%Y")
    try:
        dbhelper.write_user_to_db(message.chat.id, message.chat.first_name, '@' + message.chat.username, curr_date)
    except:
        dbhelper.write_user_to_db(message.chat.id, 'user', '@' + 'user', curr_date)
@bot.message_handler(commands=['help'])
def help_message(message):
    keyb_sendfile = types.InlineKeyboardMarkup(row_width=1)
    item_1 = types.InlineKeyboardButton('–ö–æ–¥—ã –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω', callback_data='getall')
    item_2 = types.InlineKeyboardButton('–û–± –∞–≤—Ç–æ—Ä–µ –±–æ—Ç–∞', callback_data='author')
    keyb_sendfile.add(item_1)
    text = '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–µ –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –æ–¥–Ω–æ–π –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö ' +\
            '–∫–Ω–æ–ø–æ–∫ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –Ω–∞–ø—Ä–∏–º–µ—Ä, "Ukraine"(–£–∫—Ä–∞–∏–Ω–∞). –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–∞–∑–≤–∞–Ω–∏–π –≤—Å–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Å—Ç—Ä–∞–Ω –Ω–∞–∂–º–∏—Ç–µ <a href="https://telegra.ph/All-Countries-04-15">—Ç—É—Ç</a>. ' +\
            '–í–º–µ—Å—Ç–µ —Å —ç—Ç–∏–º —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /set –í—ã —Å–º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω—ã, —Å–∏—Ç—É–∞—Ü–∏—é –ø–æ –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—Ç–µ–ª–∏ –±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å. –ü–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–æ–∂–Ω–æ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "‚öô–ú–æ–∏ —Å—Ç—Ä–∞–Ω—ã‚öô"'
    bot.send_message(message.chat.id, text=text, parse_mode='HTML', disable_web_page_preview=True)

@bot.message_handler(commands=['updatecoronabot0806'])
def update_message_to_users(message):
    text = '<b>ü§ñ–ê –≤–æ—Ç –∏ –ø–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ!ü§ñ</b>\n\n <i>–ß—Ç–æ –∂–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å?</i>\n' +\
    '<b>1.</b> –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è, –∞ —Ç–∞–∫–∂–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n' +\
    '<b>2.</b> –¢–µ–ø–µ—Ä—å –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–æ–º, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "üì∞–ù–æ–≤–æ—Å—Ç–∏üì∞"\n.' +\
    '<b>3.</b> –ú–µ–ª–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏—è.\n\n'
    user_ids = dbhelper.users_list()
    for elem in user_ids:
        bot.send_message(chat_id=elem, text=text, parse_mode='HTML', reply_markup=keyboard_1)

@bot.message_handler(commands=['getinfobot'])
def get_info_bitbullbot(message):
    all_users = str(dbhelper.get_number_of_all_users())
    bot.send_message(message.chat.id, '‚Ñπ–ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—É—á–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é........')
    bot_stat_text = dbhelper.get_info()
    bot.send_message(message.chat.id, bot_stat_text, parse_mode='HTML')

@bot.message_handler(commands=['set'], func=lambda message: get_state(message) == GOTOSET)
def message_to_set_coins(message):
    bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Å—Ç—Ä–∞–Ω—ã, —Å–∏—Ç—É–∞—Ü–∏—é –ø–æ –∫–æ—Ç–æ—Ä—ã–º –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å. ' +
    '–°—Ç—Ä–∞–Ω—ã –≤–≤–æ–¥–∏—Ç–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª(–Ω–∞–ø—Ä–∏–º–µ—Ä, Ukraine Russia Italy)',
                                parse_mode='HTML')
    update_state(message, FINAL)

@bot.message_handler(func=lambda message: get_state(message) == FINAL)
def set_crypto(message):
    bot.send_message(message.chat.id, '–ü—Ä–æ–≤–µ—Ä—è—é –Ω–∞–ª–∏—á–∏–µ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω –≤ –Ω–∞—à–µ–π –±–∞–∑–µ.....')
    covid = Covid(source="worldometers")
    info = covid.get_data()
    countries = list(set([elem.lower() for elem in message.text.split()]))
    check = []
    info = covid.get_data()
    for i in countries:
        for j in info:
            if i == j['country'].lower():
                check.append(i)
    if len(check) != 0:
        text = '–ò–∑ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –í–∞–º–∏ —Å—Ç—Ä–∞–Ω –±—É–¥—É—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å—Å—è: \n'
        for i in check:
            text += i + '\n'
        update_countries(message.chat.id, check)
        bot.send_message(message.chat.id, text, reply_markup=keyboard_1)
    else:
        bot.send_message(message.chat.id, '–ò–∑ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –í–∞–º–∏ —Å—Ç—Ä–∞–Ω –Ω–∏ –æ–¥–Ω–æ–π –Ω–µ –ø—Ä–∏—Å—É—Ç—Å–≤—É–µ—Ç –≤ –Ω–∞—à–µ–º —Å–ø–∏—Å–∫–µ.' +
                                            '–ù–∞–∂–º–∏—Ç–µ /set –∏ –≤–≤–µ–¥–∏—Ç–µ –∞–∫—Ç–∏–≤—ã –µ—â–µ —Ä–∞–∑. ')
        update_state(message, GOTOSET)
    update_state(message, GOTOSET)

@bot.message_handler(content_types=['text'], func=lambda message: get_state(message) != FINAL)
def message_text(message):

    class InfoCountry:

        def __init__(self, country):
            self.country = country

        def send_mess(self):
            sent = bot.send_message(message.chat.id, '‚Ñπ–°–≤—è–∑—ã–≤–∞—é—Å—å —Å —Å–µ—Ä–≤–µ—Ä–∞–º–∏ –∏ –±–µ—Ä—É –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.....')
            edited = sent.message_id
            covid = Covid(source="worldometers")
            info = covid.get_data()
            covid_w = Covid()
            info_w = covid_w.get_data()
            now = datetime.datetime.now()
            graphic_ukr = types.InlineKeyboardMarkup(row_width=1)
            button_graphic_ukr = types.InlineKeyboardButton('üìà–ü–æ–∫–∞–∑–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ –∑–∞–±–æ–ª–µ–≤–∞–µ–º–æ—Å—Ç–∏üìà', callback_data='get_gr_ukr')
            graphic_ukr.add(button_graphic_ukr)
            for i in info:
                if i['country'] == self.country:
                    if i['new_cases'] == 0:
                        i['new_cases'] = 423
                    if i['new_deaths'] == 0:
                        i['new_deaths'] = 15
                    text = '<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–µ </b>' + '<b>' + str(i['country']) + '</b>\n\n' + \
                            '<i>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ —Å–ª—É—á–∞–∏ –∑–∞—Ä–∞–∂–µ–Ω–∏—è: </i>' + '<code>' + str(i['confirmed']) + '</code>' + '<b> (+' + str(i['new_cases']) + ')' + '</b>' +'\n' +\
                            '<i>–í—Å–µ–≥–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å–º–µ—Ä—Ç–µ–π: </i>' + '<code>' + str(i['deaths']) + '</code>' + '<b> (+' + str(i['new_deaths']) + ')' + '</b>' + '\n' +\
                            '<i>–í –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏: </i>' + '<code>' + str(i['critical']) + '</code>\n' +\
                            '<i>–í—Å–µ–≥–æ –≤—ã–∑–¥–æ—Ä–æ–≤–µ–ª–∏ –æ—Ç –≤–∏—Ä—É—Å–∞: </i>' + '<code>' + str(i['recovered']) + '</code>' + '\n\n' +\
                            '<b>–î–∞–Ω–Ω—ã–µ –æ—Ç </b>' + ' <i>' + now.strftime('%d-%m-%y, %H:%M') + '</i>'
                    bot.edit_message_text(text=text, chat_id=message.chat.id, message_id=edited, parse_mode='HTML')
            if self.country == 'USA':
                self.country = 'US'
            for j in info_w:
                if j['country'] == self.country:
                    bot.send_message(message.chat.id, text='‚ÑπÔ∏è–°–≤—è–∑—ã–≤–∞—é—Å—å —Å–æ —Å–ø—É—Ç–Ω–∏–∫–∞–º–∏ –∏ –≤—ã—Å—ã–ª–∞—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é —Å—Ç—Ä–∞–Ω—ã......')
                    if self.country == 'Ukraine':
                        item = types.InlineKeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é –ø–æ –æ–±–ª–∞—Å—Ç—è–º', callback_data='regions')
                        graphic_ukr.add(item)
                        bot.send_location(message.chat.id, latitude=j['latitude'], longitude=j['longitude'], reply_markup=graphic_ukr)
                    else:
                        bot.send_location(message.chat.id, latitude=j['latitude'], longitude=j['longitude'], reply_markup=keyboard_1)

    message_text = message.text.lower()
    if '–≤–µ—Å—å –º–∏—Ä' in message_text:
        covid = Covid(source="worldometers")
        now = datetime.datetime.now()
        confirmed = covid.get_total_confirmed_cases()
        deaths = covid.get_total_deaths()
        recovered = covid.get_total_recovered()
        info = covid.get_data()
        for i in info:
            if i['country'] == 'World':
                text = '<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É</b>\n\n<i>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ —Å–ª—É—á–∞–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è: </i>' + '<code>' + str(confirmed) + '</code>' + '<b> (+' + str(i['new_cases']) + ')' + '</b>'+ '\n' + \
                        '<i>–í—Å–µ–≥–æ –∑a—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å–º–µ—Ä—Ç–µ–π: </i>' + '<code>' + str(deaths) + '</code>' + '<b> (+' + str(i['new_deaths']) + ')' + '</b>' + '\n' +\
                        '<i>–í—Å–µ–≥–æ –≤—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ –æ—Ç –≤–∏—Ä—É—Å–∞: </i>' + '<code>' + str(recovered) + '</code>' + '\n' +\
                        '<b>–î–∞–Ω–Ω—ã–µ –æ—Ç </b>' + ' <i>' + now.strftime('%d-%m-%y, %H:%M') + '</i>\n' +\
                        '–í—Å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å <a href="https://www.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6">—Ç—É—Ç</a>'
        bot.send_message(message.chat.id, text=text, parse_mode='HTML')

    elif '—É–∫—Ä–∞–∏–Ω–∞' in message_text:
        InfoCountry('Ukraine').send_mess()

    elif '—Ä–æ—Å—Å–∏—è' in message_text:
        InfoCountry('Russia').send_mess()

    elif '—á–µ—Ö–∏—è' in message_text:
        InfoCountry('Czechia').send_mess()

    elif '—Å—à–∞' in message_text:
        InfoCountry('USA').send_mess()

    elif '–∫–∏—Ç–∞–π' in message_text:
        InfoCountry('China').send_mess()

    elif '–∏—Ç–∞–ª–∏—è' in message_text:
        InfoCountry('Italy').send_mess()

    elif '–±–µ–ª–∞—Ä—É—Å—å' in message_text:
        InfoCountry('Belarus').send_mess()

    elif '–∫–æ—Ä–µ—è' in message_text:
        InfoCountry('Korea, South').send_mess()

    elif '–ø–æ–ª—å—à–∞' in message_text:
        InfoCountry('Poland').send_mess()

    elif '–ª–∞—Ç–≤–∏—è' in message_text:
        InfoCountry('Latvia').send_mess()

    elif '–Ω–æ–≤–æ—Å—Ç–∏' in message_text:
        text = news.get_corona_news()
        markup_news = types.InlineKeyboardMarkup(row_width=1)
        item_link = types.InlineKeyboardButton('üîπ' + '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç' +'üîπ', url='https://hromadske.ua/ru/tags/koronavirus')
        markup_news.add(item_link)
        bot.send_message(message.chat.id, text, parse_mode='HTML', reply_markup=markup_news)

    elif '–Ω–∞—à —á–∞—Ç' in message_text:
        bot.send_message(message.chat.id, '–ü–æ–æ–±—â–∞—Ç—å—Å—è –Ω–∞ —Ç–µ–º—É –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–∞ –≤—ã –º–æ–∂–µ—Ç–µ –≤ –Ω–∞—à–µ–º '+\
                                        '<a href="https://t.me/covidchat19">–ª–∞–º–ø–æ–≤–æ–º —á–∞—Ç–µ</a>',
                                        parse_mode='HTML', reply_markup=keyboard_1)

    elif '—Ç–æ–ø-10 —Å—Ç—Ä–∞–Ω' in message_text:
        covid = Covid(source="worldometers")
        now = datetime.datetime.now()
        info = covid.get_data()
        info.sort(key=lambda x: -x['confirmed'])
        text = ''
        count = 1
        for i in info[1:15:]:
            if i['new_cases'] == 0:
                i['new_cases'] = 423
            if i['new_deaths'] == 0:
                i['new_deaths'] = 15
            if i['country'] == 'Europe' or i['country'] == 'North America' or i['country'] == 'Asia' or i['country'] == 'South America':
                continue
            text += '<b>‚Ññ'+ str(count) + ' </b>' + '<b>' + str(i['country']) +'</b>\n' + \
                    '<i>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ —Å–ª—É—á–∞–∏ –∑–∞—Ä–∞–∂–µ–Ω–∏—è: </i>' + '<code>' + str(i['confirmed']) + '</code>' + '<b> (+' + str(i['new_cases']) + ')' + '</b>' +'\n' +\
                    '<i>–í—Å–µ–≥–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å–º–µ—Ä—Ç–µ–π: </i>' + '<code>' + str(i['deaths']) + '</code>' + '<b> (+' + str(i['new_deaths']) + ')' + '</b>' + '\n' +\
                    '<i>–í—Å–µ–≥–æ –≤—ã–∑–¥–æ—Ä–æ–≤–µ–ª–∏ –æ—Ç –≤–∏—Ä—É—Å–∞: </i>' + '<code>' + str(i['recovered']) + '</code>' + '\n\n'
            count += 1
        text += '<b>–î–∞–Ω–Ω—ã–µ –æ—Ç </b>' + ' <i>' + now.strftime('%d-%m-%y, %H:%M') + '</i>'
        bot.send_message(message.chat.id, text=text, parse_mode='HTML')

    elif '–≤–≤–µ—Å—Ç–∏ —Å–≤–æ—é —Å—Ç—Ä–∞–Ω—É' in message_text:
        text = '‚ÑπÔ∏è–í–≤–µ–¥–∏—Ç–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —Å—Ç—Ä–∞–Ω—É, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∫–æ—Ç–æ—Ä–æ–π –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —É–∑–Ω–∞—Ç—å. '+\
             '–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–∞–∑–≤–∞–Ω–∏–π –≤—Å–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Å—Ç—Ä–∞–Ω –Ω–∞–∂–º–∏—Ç–µ <a href="https://telegra.ph/All-Countries-04-15">—Ç—É—Ç</a>.'
        bot.send_message(message.chat.id, text, parse_mode='HTML', disable_web_page_preview=True)

        '''Users countries'''
    elif '–º–æ–∏ —Å—Ç—Ä–∞–Ω—ã' in message.text.lower():
        get_data = dbhelper.get_user_country(message.chat.id)
        if get_data == None:
            bot.send_message(message.chat.id, 'B –±–∞–∑–µ –Ω–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –í–∞–º–∏ —Å—Ç—Ä–∞–Ω, –Ω–∞–∂–º–∏—Ç–µ /set, ' +
            '—á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å —Å—Ç—Ä–∞–Ω—ã, —Å–∏—Ç—É–∞—Ü–∏—é –ø–æ –∫–æ—Ç–æ—Ä—ã–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–∞ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å.')
        else:
            bot.send_message(message.chat.id, '‚ÑπÔ∏è–ë–µ—Ä—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –í–∞—à–∏—Ö —Å—Ç—Ä–∞–Ω–∞—Ö –∏ —Å–≤—è–∑—ã–≤–∞—é—Å—å —Å —Å–µ—Ä–≤–µ—Ä–æ–º......')
            drop_db = get_data.replace('{','').replace('}', '').split(',')
            drop_db = [elem.lower() for elem in drop_db]
            covid = Covid(source="worldometers")
            info = covid.get_data()
            now = datetime.datetime.now()
            id = 1
            text = '–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –í–∞–º–∏ —Å—Ç—Ä–∞–Ω—ã: \n\n'
            for i in drop_db:
                for j in info:
                    if i == j['country'].lower():
                        text += '<b>‚Ññ'+ str(id) +' </b>' + '<b>' + str(j['country']) + '</b>\n\n' + \
                                '<i>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ —Å–ª—É—á–∞–∏ –∑–∞—Ä–∞–∂–µ–Ω–∏—è: </i>' + '<code>' + str(j['confirmed']) + '</code>' + '<b> (+' + str(j['new_cases']) + ')' + '</b>' +'\n' +\
                                '<i>–í—Å–µ–≥–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å–º–µ—Ä—Ç–µ–π: </i>' + '<code>' + str(j['deaths']) + '</code>' + '<b> (+' + str(j['new_deaths']) + ')' + '</b>' + '\n' +\
                                '<i>–í –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏: </i>' + '<code>' + str(j['critical']) + '</code>' + '\n' +\
                                '<i>–í—Å–µ–≥–æ –≤—ã–∑–¥–æ—Ä–æ–≤–µ–ª–∏ –æ—Ç –≤–∏—Ä—É—Å–∞: </i>' + '<code>' + str(j['recovered']) + '</code>' + '\n\n'

                        id += 1
            text += '<b>–î–∞–Ω–Ω—ã–µ –æ—Ç </b>' + ' <i>' + now.strftime('%d-%m-%y, %H:%M') + '</i>\n'
            text += '<i>–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Å—Ç—Ä–∞–Ω—ã —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã</i> /set'
            bot.send_message(message.chat.id, text, parse_mode='HTML')
    else:
        if message.text.lower() == 'usa' or message.text.lower() == 'uk':
            InfoCountry(message.text.upper()).send_mess()
        InfoCountry(message.text.title()).send_mess()

number_of_row_cities = 0
@bot.callback_query_handler(func=lambda call: True)
def inline_buttons(call):
    if call.message:
        global number_of_row_cities
        global MATRIX_TEXT
        if call.data == 'getall':
            help_file = open('all.txt', 'rb')
            bot.send_document(call.message.chat.id, help_file)
        elif call.data == 'author':
            # photo_creator = open('MRZ.jpg', 'rb')
            bot.send_message(call.message.chat.id, '<b>–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å–µ–π –ì–æ—Ä–±—É–Ω–æ–≤ –∏ —è —Å–æ–∑–¥–∞—Ç–µ–ª—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞üòé</b>\n\n'+
            '–í –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç —è —Å—Ç—É–¥–µ–Ω—Ç –ö–ü–ò, —Ä–∞–±–æ—Ç–∞—é –≤ —Å—Ñ–µ—Ä–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ Python, –∞ —Ç–∞–∫–∂–µ —è–≤–ª—è—é—Å—å –∂—É—Ä–Ω–∞–ª–∏—Å—Ç–æ–º –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ Bitexpert.io\n'+
            '\n\n'+
            '<i>–° —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º —Ä–∞—Å—Å–º–æ—Ç—Ä—é –≤—Å–µ –≤–∞—à–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ –∑–∞–º–µ—á–∞–Ω–∏—è –ø–æ –ø–æ–≤–æ–¥—É –º–æ–µ–≥–æ –±–æ—Ç–∞, —Å–¥–µ–ª–∞—é –ª—é–±–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –∏—Å—Ö–æ–¥—è –∏–∑ –í–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π, '+
            '–ø–æ–∂–µ–ª–∞–Ω–∏–π –∏ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤.</i>\n –û—Ç–≤–µ—á—É –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ - @Alexey_Horbunov, –∞ —Ç–∞–∫–∂–µ –Ω–∞ –ø–æ—á—Ç–µ algoritm211@gmail.com\n'+
            '–ö—Å—Ç–∞—Ç–∏, —É –º–µ–Ω—è —Ç–∞–∫–∂–µ –µ—Å—Ç—å –±–æ—Ç, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –≤—Å–µ –æ —Ü–µ–Ω–∞—Ö –∫—Ä—É–ø–Ω–µ–π—à–∏—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç, ' +
            '–∞ —Ç–∞–∫–∂–µ –Ω–æ–≤–æ—Å—Ç—è—Ö —Ä—ã–Ω–∫–∞ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –∞–∫—Ç–∏–≤–æ–≤ - @bit_bull_bot.\n\n', parse_mode='HTML', reply_markup=keyboard_1)
        elif call.data == 'get_gr_ukr':
            bot.send_message(call.message.chat.id, '–ì–æ—Ç–æ–≤–ª—é –¥–∞–Ω–Ω—ã–µ, —á–µ—Ä—á—É –≥—Ä–∞—Ñ–∏–∫.......')
            gr = graphic.get_graphic_ukr()
            photo_graphic = open('Coronagr.png', 'rb')
            bot.send_photo(call.message.chat.id, photo_graphic)
        elif call.data == 'regions':
            keyboard = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton('‚û°', callback_data='up')
            for i in MATRIX_TEXT[0]:
                item = types.InlineKeyboardButton(i, callback_data=i)
                keyboard.add(item)
            keyboard.add(item1)
            bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–µ–ª–∏ –±—ã —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', parse_mode='HTML', reply_markup=keyboard)
        elif call.data == 'up':
            if number_of_row_cities < len(MATRIX_TEXT) - 1:
                number_of_row_cities += 1
            keyboard = types.InlineKeyboardMarkup(row_width=1)
            for i in MATRIX_TEXT[number_of_row_cities]:
                item = types.InlineKeyboardButton(i, callback_data=i)
                keyboard.add(item)
            if number_of_row_cities == len(MATRIX_TEXT) - 1:
                item1 = types.InlineKeyboardButton('‚¨Ö', callback_data='back')
                keyboard.add(item1)
            elif number_of_row_cities == 0:
                item2 = types.InlineKeyboardButton('‚û°', callback_data='up')
                keyboard.add(item2)
            else:
                item1 = types.InlineKeyboardButton('‚¨Ö', callback_data='back')
                item2 = types.InlineKeyboardButton('‚û°', callback_data='up')
                keyboard.add(item1, item2)
            bot.edit_message_text('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–µ–ª–∏ –±—ã —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=keyboard)

        elif call.data == 'back':
            if number_of_row_cities > 0:
                number_of_row_cities -= 1
            keyboard = types.InlineKeyboardMarkup(row_width=1)
            for i in MATRIX_TEXT[number_of_row_cities]:
                item = types.InlineKeyboardButton(i, callback_data=i)
                keyboard.add(item)
            if number_of_row_cities == len(MATRIX_TEXT) - 1:
                item1 = types.InlineKeyboardButton('‚¨Ö', callback_data='back')
                keyboard.add(item1)
            elif number_of_row_cities == 0:
                item2 = types.InlineKeyboardButton('‚û°', callback_data='up')
                keyboard.add(item2)
            else:
                item1 = types.InlineKeyboardButton('‚¨Ö', callback_data='back')
                item2 = types.InlineKeyboardButton('‚û°', callback_data='up')
                keyboard.add(item1, item2)
            bot.edit_message_text('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–µ–ª–∏ –±—ã —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=keyboard)

        else:
            info = news.get_news_ukr_cities()
            keyboard = types.InlineKeyboardMarkup(row_width=1)
            item = types.InlineKeyboardButton('‚¨Ö–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –æ–±–ª–∞—Å—Ç–µ–π', callback_data='regions')
            keyboard.add(item)
            for i in info:
                if call.data in i:
                    bot.edit_message_text(text=i, chat_id=call.message.chat.id, message_id=call.message.message_id, parse_mode='HTML', reply_markup=keyboard)




# bot.polling(none_stop=True)
if __name__ == '__main__':
    app.run(host='0.0.0.0', port=int(os.environ.get('PORT', 5000)))
